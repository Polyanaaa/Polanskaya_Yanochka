// <auto-generated />
using System;
using DataAccess.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(pharmacy199Context))]
    [Migration("20230407110715_MigratonName")]
    partial class MigratonName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Models.Basket", b =>
                {
                    b.Property<int>("UserIdd")
                        .HasColumnType("int")
                        .HasColumnName("User_idd");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<int>("QuantityOfGoods")
                        .HasColumnType("int")
                        .HasColumnName("Quantity_of_goods");

                    b.HasKey("UserIdd", "ProductId")
                        .HasName("PK__Basket__73B78D03653F4218");

                    b.HasIndex("ProductId");

                    b.ToTable("Basket", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Filterr", b =>
                {
                    b.Property<int>("IdCategories")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_categories");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategories"), 1L, 1);

                    b.Property<bool>("AvailabilityOfDiscounts")
                        .HasColumnType("bit")
                        .HasColumnName("availability_of_discounts");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("brand_name");

                    b.Property<int?>("Discounts")
                        .HasColumnType("int")
                        .HasColumnName("discounts");

                    b.Property<string>("ExpirationDate")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("expiration_date");

                    b.Property<string>("Indications")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("indications");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("producer");

                    b.Property<bool>("ProductAvailability")
                        .HasColumnType("bit")
                        .HasColumnName("product_availability");

                    b.Property<int>("QuantityInPack")
                        .HasColumnType("int")
                        .HasColumnName("quantity_in_pack");

                    b.Property<string>("ReleaseForm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("release_form");

                    b.Property<string>("VacationFromThePharmacy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("vacation_from_the_pharmacy");

                    b.HasKey("IdCategories")
                        .HasName("PK__Filterr__26BE28459F97D3DC");

                    b.ToTable("Filterr", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Orderr", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Order_Number");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderNumber"), 1L, 1);

                    b.Property<int>("UserIdd")
                        .HasColumnType("int")
                        .HasColumnName("User_idd");

                    b.Property<int>("NumberProduct")
                        .HasColumnType("int")
                        .HasColumnName("Number_product");

                    b.Property<DateTime>("DateReferences")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_references");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Statuss")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OrderNumber", "UserIdd", "NumberProduct")
                        .HasName("PK__Orderr__B8CE93343714D952");

                    b.HasIndex("NumberProduct");

                    b.HasIndex("UserIdd");

                    b.ToTable("Orderr", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<int>("NumberProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Number_product");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumberProduct"), 1L, 1);

                    b.Property<string>("Article")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("(CONVERT([varchar](255),newid()))");

                    b.Property<int>("IdCategories")
                        .HasColumnType("int")
                        .HasColumnName("Id_categories");

                    b.Property<string>("Namee")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Product_description");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(25,2)")
                        .HasColumnName("Product_price");

                    b.HasKey("NumberProduct")
                        .HasName("PK__Product__AA6BD16AA12F16DF");

                    b.HasIndex("IdCategories");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Domain.Models.SavedAddress", b =>
                {
                    b.Property<int>("UserIdd")
                        .HasColumnType("int")
                        .HasColumnName("User_idd");

                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Address_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"), 1L, 1);

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Address_name");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Construction")
                        .HasColumnType("int");

                    b.Property<int>("Flat")
                        .HasColumnType("int");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserIdd", "AddressId")
                        .HasName("PK__Saved_ad__7A0C9D06E6D0B9AA");

                    b.ToTable("Saved_address", (string)null);
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("UserNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_number");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserNumber"), 1L, 1);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Last_name");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Namee")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Phone_number");

                    b.HasKey("UserNumber")
                        .HasName("PK__Users__A949FB8DB54D7456");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.Basket", b =>
                {
                    b.HasOne("Domain.Models.Product", "Product")
                        .WithMany("Baskets")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Basket__Product___4316F928");

                    b.HasOne("Domain.Models.User", "UserIddNavigation")
                        .WithMany("Baskets")
                        .HasForeignKey("UserIdd")
                        .IsRequired()
                        .HasConstraintName("FK__Basket__User_idd__4222D4EF");

                    b.Navigation("Product");

                    b.Navigation("UserIddNavigation");
                });

            modelBuilder.Entity("Domain.Models.Orderr", b =>
                {
                    b.HasOne("Domain.Models.Product", "NumberProductNavigation")
                        .WithMany("Orderrs")
                        .HasForeignKey("NumberProduct")
                        .IsRequired()
                        .HasConstraintName("FK__Orderr__Number_p__46E78A0C");

                    b.HasOne("Domain.Models.User", "UserIddNavigation")
                        .WithMany("Orderrs")
                        .HasForeignKey("UserIdd")
                        .IsRequired()
                        .HasConstraintName("FK__Orderr__User_idd__45F365D3");

                    b.Navigation("NumberProductNavigation");

                    b.Navigation("UserIddNavigation");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.HasOne("Domain.Models.Filterr", "IdCategoriesNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdCategories")
                        .IsRequired()
                        .HasConstraintName("FK__Product__Id_cate__3C69FB99");

                    b.Navigation("IdCategoriesNavigation");
                });

            modelBuilder.Entity("Domain.Models.SavedAddress", b =>
                {
                    b.HasOne("Domain.Models.User", "UserIddNavigation")
                        .WithMany("SavedAddresses")
                        .HasForeignKey("UserIdd")
                        .IsRequired()
                        .HasConstraintName("FK__Saved_add__User___3F466844");

                    b.Navigation("UserIddNavigation");
                });

            modelBuilder.Entity("Domain.Models.Filterr", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Navigation("Baskets");

                    b.Navigation("Orderrs");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("Baskets");

                    b.Navigation("Orderrs");

                    b.Navigation("SavedAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
